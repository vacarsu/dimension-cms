!function(e){function t(t){for(var i,o,s=t[0],a=t[1],l=t[2],m=0,p=[];m<s.length;m++)o=s[m],r[o]&&p.push(r[o][0]),r[o]=0;for(i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i]);for(c&&c(t);p.length;)p.shift()();return u.push.apply(u,l||[]),n()}function n(){for(var e,t=0;t<u.length;t++){for(var n=u[t],i=!0,s=1;s<n.length;s++){var a=n[s];0!==r[a]&&(i=!1)}i&&(u.splice(t--,1),e=o(o.s=n[0]))}return e}var i={},r={3:0},u=[];function o(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise(function(t,i){n=r[e]=[t,i]});t.push(n[2]=i);var u,s=document.getElementsByTagName("head")[0],a=document.createElement("script");a.charset="utf-8",a.timeout=120,o.nc&&a.setAttribute("nonce",o.nc),a.src=function(e){return o.p+""+({}[e]||e)+".js"}(e),u=function(t){a.onerror=a.onload=null,clearTimeout(l);var n=r[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),u=t&&t.target&&t.target.src,o=new Error("Loading chunk "+e+" failed.\n("+i+": "+u+")");o.type=i,o.request=u,n[1](o)}r[e]=void 0}};var l=setTimeout(function(){u({type:"timeout",target:a})},12e4);a.onerror=a.onload=u,s.appendChild(a)}return Promise.all(t)},o.m=e,o.c=i,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/dist/",o.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],a=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var c=a;u.push([16,2]),n()}({16:function(e,t,n){"use strict";n.r(t);var i=n(4),r=n(0),u=n(15),o=n(111),s=n(269),a=(n(28),n(25),n(24),n(23),n(22),n(21),n(20),n(18),n(5)),l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i.c(t,e),t.prototype.render=function(){return r.createElement(a.l,{direction:"column"},r.createElement(a.i,{style:{width:"100%",paddingLeft:"0",paddingRight:"0"},size:"expand"},r.createElement(a.j,{type:"image",src:"/dimension-cms/client/images/background.jpeg"})),r.createElement(a.z,{size:"default",padding:!0},r.createElement(a.i,null,r.createElement(a.l,{alignment:"center",direction:"row"},r.createElement(a.r,{type:"divider"},r.createElement(a.s,null,r.createElement("p",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. ",r.createElement("b",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Praesent mauris. Fusce nec tellus sed augue semper porta. ",r.createElement("b",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. ",r.createElement("b",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Sed dignissim lacinia nunc. ")),r.createElement(a.s,null,r.createElement("p",null,"Curabitur tortor. Pellentesque nibh. ",r.createElement("i",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Aenean quam. In scelerisque sem at dolor. Maecenas mattis. Sed convallis tristique sem. Proin ut ligula vel nunc egestas porttitor. Morbi lectus risus, iaculis vel, suscipit quis, luctus non, massa. Fusce ac turpis quis ligula lacinia aliquet. ",r.createElement("i",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Mauris ipsum. Nulla metus metus, ullamcorper vel, tincidunt sed, euismod in, nibh. ")),r.createElement(a.s,null,r.createElement("p",null,r.createElement("i",null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit"),". Quisque volutpat condimentum velit. ",r.createElement("i",null,"Sed dignissim lacinia nunc"),". Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nam nec ante. Sed lacinia, urna non tincidunt mattis, tortor neque adipiscing diam, a cursus ipsum ante quis turpis. Nulla facilisi. ",r.createElement("b",null,"Proin ut ligula vel nunc egestas porttitor"),". Ut fringilla. Suspendisse potenti. Nunc feugiat mi a tellus consequat imperdiet. Vestibulum sapien. Proin quam. Etiam ultrices. Suspendisse in justo eu magna luctus suscipit. Sed lectus. Integer euismod lacus luctus magna. ")),r.createElement(a.s,null,r.createElement("p",null,"Quisque cursus, metus vitae pharetra auctor, sem massa mattis sem, at interdum magna augue eget diam. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Morbi lacinia molestie dui. Praesent blandit dolor. Sed non quam. In vel mi sit amet augue congue elementum. Morbi in ipsum sit amet pede facilisis laoreet. Donec lacus nunc, viverra nec, blandit vel, egestas et, augue. Vestibulum tincidunt malesuada tellus. Ut ultrices ultrices enim. ",r.createElement("b",null,"Suspendisse in justo eu magna luctus suscipit"),". Curabitur sit amet mauris. Morbi in dui quis est pulvinar ullamcorper. ",r.createElement("b",null,"Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Morbi lacinia molestie dui"),". Nulla facilisi. Integer lacinia sollicitudin massa. ")))))))},t}(r.Component);document.addEventListener("DOMContentLoaded",function(){Object(u.render)(r.createElement(c,null),document.getElementById("root"))},!1);var c=function(e){function t(t){var n=e.call(this,t)||this;return n.state={isLoading:!0,isLoadingRouteModules:!0,modules:null,packages:null,moduleRoutes:[]},n}return i.c(t,e),t.prototype.componentWillMount=function(){this.setup()},t.prototype.render=function(){return r.createElement(s.a,null,r.createElement(r.Fragment,null,r.createElement(o.a,{exact:!0,path:"/",component:l}),r.createElement("div",null,this.state.isLoadingRouteModules?"":this.renderRoutes())))},t.prototype.renderRoutes=function(){if(!this.state.isLoadingRouteModules)return this.state.moduleRoutes.map(function(e){var t=e.component;return console.log(e),r.createElement(o.a,{exact:e.route.exact,path:e.route.path,component:t})})},t.prototype.setup=function(){return i.b(this,void 0,void 0,function(){var e,t,n,r,u,o,s,a,l,c,m;return i.d(this,function(i){switch(i.label){case 0:return[4,this.fetchPackages()];case 1:for(r in e=i.sent(),localStorage.setItem("packages",JSON.stringify(e)),t=[],n=[],e)n.push(r);u=0,i.label=2;case 2:if(!(u<n.length))return[3,7];for(a in o=n[u],s=[],e[o].modules)s.push(a);l=0,i.label=3;case 3:return l<s.length?(c=s[l],[4,this.fetchPackageModule(o,c)]):[3,6];case 4:m=i.sent(),t.push({module:m,packageName:o}),i.label=5;case 5:return l++,[3,3];case 6:return u++,[3,2];case 7:return this.setState({packages:e,modules:t,isLoading:!1}),this.importRoutes(),[2]}})})},t.prototype.fetchPackages=function(){return fetch("/api/packages").then(function(e){return e.json()})},t.prototype.fetchPackageModule=function(e,t){return fetch("/api/packages/"+e+"/"+t).then(function(e){return e.json()})},t.prototype.importRoutes=function(){var e=this;if(!this.state.isLoading){var t=this.state.modules;t.map(function(n,r){return i.b(e,void 0,void 0,function(){var e=this;return i.d(this,function(u){return n.module.routes&&n.module.routes.map(function(u,o){return i.b(e,void 0,void 0,function(){return i.d(this,function(e){switch(e.label){case 0:return[4,this.importRouteComponent(n.packageName,u)];case 1:return e.sent(),console.log([n.module.routes.length,o]),r===t.length-1&&o===n.module.routes.length-1&&this.setModuleLoadingStateComplete(),[2]}})})}),console.log([t.length,r]),r===t.length-1&&this.setModuleLoadingStateComplete(),[2]})})})}},t.prototype.setModuleLoadingStateComplete=function(){this.setState({isLoadingRouteModules:!1})},t.prototype.importRouteComponent=function(e,t){return i.b(this,void 0,void 0,function(){var r,u,o;return i.d(this,function(i){switch(i.label){case 0:return this.setState({isLoadingRouteModules:!0}),[4,n(17)("./"+e+"/route-component-registry/route-component-registry")];case 1:return r=i.sent().routeComponentRegistry,console.log(r.AdminPage),u=r[t.component],console.log(u),(o=this.state.moduleRoutes).push({route:t,component:u}),this.setState({moduleRoutes:o}),[2]}})})},t}(r.Component)},17:function(e,t,n){var i={"./kairos-admin/route-component-registry/route-component-registry":[41,0,1]};function r(e){var t=i[e];return t?Promise.all(t.slice(1).map(n.e)).then(function(){var e=t[0];return n(e)}):Promise.resolve().then(function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}r.keys=function(){return Object.keys(i)},r.id=17,e.exports=r}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,